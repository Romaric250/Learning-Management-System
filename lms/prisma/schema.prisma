// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  SUPERADMIN
  ORGANIZATION
  COMPANY
  ADMIN
  USER
}


model User {
id                String      @id @default(auto()) @map("_id") @db.ObjectId 
  email     String   @unique
  name      String?
  phonenumber     String?
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  organisation OrganisationData?
}

model OrganisationData{
  id                String      @id @default(auto()) @map("_id") @db.ObjectId 
  type     String @default("NON PROFIT")
  name      String?
  address   String?
  city      String?
  state     String?
  country   String?
  pincode   String?
  userId   String  @db.ObjectId @unique
user     User @relation(fields: [userId], references: [id], onDelete: Cascade)

lmss LMS?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}




model LMS{
  id                String      @id @default(auto()) @map("_id") @db.ObjectId 
  name      String?
  description   String?
  organisationId   String  @db.ObjectId @unique
  organisation OrganisationData @relation(fields: [organisationId], references: [id], onDelete: Cascade)
  courses Courses[]
  createdAt DateTime @default(now())
}


model Courses {
  id                String      @id @default(auto()) @map("_id") @db.ObjectId 
  name      String?
  description   String?
  lmsId   String  @db.ObjectId @unique
  lms LMS @relation(fields: [lmsId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}







